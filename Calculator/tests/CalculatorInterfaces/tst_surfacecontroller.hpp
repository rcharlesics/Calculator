//--------------------------------------------------------------------------------------------------
// Generated using GreenHouse Modeling Library v 1.3.8
// From: Calculator SurfaceController Interface
// Please do not edit this file as it will be overwritten the next time the application flow is
// regenerated.
//--------------------------------------------------------------------------------------------------
#pragma once

#include <limits>

#include <gtest/gtest.h>
#include <gmock/gmock-matchers.h>

#include <QJsonDocument>

#include <Calculator/surfacecontroller.hpp>

using namespace testing;

class SurfaceControllerTestRpc : public GreenHouse::RPCServiceInterface
{
    public:
    using GreenHouse::RPCServiceInterface::RPCServiceInterface;
    
    QList<QJsonObject> messages;
    
    // GreenHouse::RPCServiceInterface interface
    protected:
    void sendPayload(const QByteArray &data) override
    {
        QJsonParseError err;
        QJsonDocument doc = QJsonDocument::fromJson(data, &err);
        if (err.error == QJsonParseError::NoError) {
                messages.append(doc.object());
        }
    }
};

class SurfaceControllerInterfaceTest : public Test
{
    // Test interface
    protected:
    void SetUp();
    void TearDown();
    
    Calculator::SurfaceController *iface;
    SurfaceControllerTestRpc *m_rpc;
    GreenHouse::Context m_ctx;
};

void SurfaceControllerInterfaceTest::SetUp()
{
    m_rpc = new SurfaceControllerTestRpc(&m_ctx);
    iface = new Calculator::SurfaceController;
    m_ctx.store(iface);
}

void SurfaceControllerInterfaceTest::TearDown()
{
}

TEST_F(SurfaceControllerInterfaceTest, showPopupsRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::showPopups, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("showPopups") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, showPopupsRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->showPopups();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, showPopupsDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::showPopups, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("showPopups") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, showPopupsDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->showPopups();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, hidePopupsRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::hidePopups, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("hidePopups") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, hidePopupsRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->hidePopups();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, hidePopupsDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::hidePopups, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("hidePopups") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, hidePopupsDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->hidePopups();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, showMenusRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::showMenus, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("showMenus") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, showMenusRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->showMenus();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, showMenusDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::showMenus, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("showMenus") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, showMenusDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->showMenus();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, hideMenusRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::hideMenus, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("hideMenus") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, hideMenusRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->hideMenus();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, hideMenusDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::hideMenus, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("hideMenus") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, hideMenusDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->hideMenus();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, surfaceMenusBackRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::surfaceMenusBack, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("surfaceMenusBack") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, surfaceMenusBackRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->surfaceMenusBack();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, surfaceMenusBackDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::surfaceMenusBack, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("surfaceMenusBack") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, surfaceMenusBackDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->surfaceMenusBack();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, showMainViewRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::showMainView, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("showMainView") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, showMainViewRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->showMainView();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, showMainViewDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::showMainView, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("showMainView") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, showMainViewDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->showMainView();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, hideMainViewRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::hideMainView, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("hideMainView") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, hideMainViewRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->hideMainView();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, hideMainViewDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::hideMainView, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("hideMainView") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, hideMainViewDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->hideMainView();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, surfaceMainViewMoveToMainView_MainViewRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::surfaceMainViewMoveToMainView_MainView, [&]() { signalEmitted = true; });
    
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("surfaceMainViewMoveToMainView_MainView") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, surfaceMainViewMoveToMainView_MainViewRPCEventNotify)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->surfaceMainViewMoveToMainView_MainView();
    
    ASSERT_TRUE(m_rpc->messages.length() >= 1);
}


TEST_F(SurfaceControllerInterfaceTest, surfaceMainViewMoveToMainView_MainViewDisabledRPCEvent)
{
    bool signalEmitted = false;
    QObject::connect(iface, &Calculator::SurfaceController::surfaceMainViewMoveToMainView_MainView, [&]() { signalEmitted = true; });
    
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    iface->handleMessage(GreenHouse::EventInvoked, QJsonObject({
        { QStringLiteral("NAME"), QStringLiteral("surfaceMainViewMoveToMainView_MainView") },
        { QStringLiteral("ARGS_TAG"), QJsonObject({  }) }
    }));
    ASSERT_TRUE(!signalEmitted);
}

TEST_F(SurfaceControllerInterfaceTest, surfaceMainViewMoveToMainView_MainViewDisabledRPCEventNotify)
{
    iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    
    iface->surfaceMainViewMoveToMainView_MainView();
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


TEST_F(SurfaceControllerInterfaceTest, SurfaceControllerRPCPublish)
{
    iface->enableRPC();
    ASSERT_TRUE(iface->rpcEnabled());
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    iface->publishObjectState();
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}

TEST_F(SurfaceControllerInterfaceTest, SurfaceControllerDisabledRPCPublish)
{iface->disableRPC();
    ASSERT_TRUE(!iface->rpcEnabled());
    
    ASSERT_TRUE(m_rpc->messages.length() == 0);
    iface->publishObjectState();
    ASSERT_TRUE(m_rpc->messages.length() == 0);
}


